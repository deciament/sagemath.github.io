# HG changeset patch
# User Nick Alexander <ncalexander@gmail.com>
# Date 1172377094 28800
# Node ID 7c58de762e210f1707189cbafdbab5988304d0be
# Parent  fdc2aebd0ceb77f25091e7d6dd4e2d975bcadb90
Address Trac #270 by fixing a flow of control issue in permgroup._coerce_impl.

Bug and fix by Mike Hansen; test by Nick Alexander.

diff -r fdc2aebd0ceb -r 7c58de762e21 sage/groups/perm_gps/permgroup.py
--- a/sage/groups/perm_gps/permgroup.py	Mon Feb 19 14:03:56 2007 -0800
+++ b/sage/groups/perm_gps/permgroup.py	Sat Feb 24 20:18:14 2007 -0800
@@ -295,13 +295,29 @@ class PermutationGroup_generic(group.Fin
             raise TypeError, "unable to coerce %s to permutation in %s"%(x, self)
 
     def _coerce_impl(self, x):
+        r"""
+        EXAMPLES:
+        The following test verifies that Trac #270 has been fixed:
+        
+        sage: g1 = PermutationGroupElement([(1,2),(3,4,5)])
+        sage: g1.parent()
+        Symmetric group of order 5! as a permutation group
+        sage: g2 = PermutationGroupElement([(1,2)])
+        sage: g2.parent()
+        Symmetric group of order 2! as a permutation group
+        sage: g1*g2
+        (3,4,5)
+        sage: g2*g2
+        ()
+        sage: g2*g1
+        (3,4,5)
+        """
         if isinstance(x, PermutationGroupElement):
             if x.parent() is self:
                 return x
             elif x.parent().degree() <= self.degree() and x._gap_() in self._gap_():
                 return PermutationGroupElement(x._gap_(), self, check = False)
-        else:
-            raise TypeError
+        raise TypeError
 
     def list(self):
         """
