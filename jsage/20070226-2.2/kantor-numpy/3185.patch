# HG changeset patch
# User jkantor@localhost.localdomain
# Date 1172404622 28800
# Node ID 25daeb28df00538151576ab6fa2e187b6221ef9c
# Parent  45fddda4a48f6eb25c8157ef8cf18db133311532
fixed doctests

diff -r 45fddda4a48f -r 25daeb28df00 sage/matrix/constructor.py
--- a/sage/matrix/constructor.py	Sun Feb 25 03:50:31 2007 -0800
+++ b/sage/matrix/constructor.py	Sun Feb 25 03:57:02 2007 -0800
@@ -204,13 +204,12 @@ def matrix(arg0=None, arg1=None, arg2=No
         [ 0  0  0  0  0]
         [ 0  0 10  0  0]
         [ 0  0  0  0  0] True
+
     8. Creating a matrix from a numpy array
         Any numpy array with a datatype of float or complex may be passed to matrix
         If the data type is float the result will be a matrix over the real double field.
         complex numpy arrays will give matrices over the complex double field.
-        The data of the numpy array must be contiguous, so slices of other matrices will raise an exception.
-
-        
+        The data of the numpy array must be contiguous, so slices of other matrices will raise an exception.        
         sage: import numpy
         sage: n=numpy.array([[1,2],[3,4]],float)
         sage: m=matrix(n)
diff -r 45fddda4a48f -r 25daeb28df00 sage/matrix/matrix_complex_double_dense.pyx
--- a/sage/matrix/matrix_complex_double_dense.pyx	Sun Feb 25 03:50:31 2007 -0800
+++ b/sage/matrix/matrix_complex_double_dense.pyx	Sun Feb 25 03:57:02 2007 -0800
@@ -480,7 +480,7 @@ cdef class Matrix_complex_double_dense(m
         sage: m=matrix(CDF,[[1,2],[3,4]])
         sage: m=I*m
         sage: n=m.numpy()
-        sage: numpy.linalg.eig(n)
+        sage: e=numpy.linalg.eig(n)
         
         
         """
