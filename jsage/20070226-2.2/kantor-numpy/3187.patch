# HG changeset patch
# User jkantor@localhost.localdomain
# Date 1172552922 28800
# Node ID 54393d809c817de2790338d3930c05e645f4b1fa
# Parent  055693341d1ebf9ae6a2dc34e00ab13f45cfc0c8
added support for numpy arrays in fortran ordering

diff -r 055693341d1e -r 54393d809c81 sage/matrix/constructor.py
--- a/sage/matrix/constructor.py	Sun Feb 25 12:42:50 2007 -0800
+++ b/sage/matrix/constructor.py	Mon Feb 26 21:08:42 2007 -0800
@@ -341,34 +341,27 @@ def matrix(arg0=None, arg1=None, arg2=No
         entries = arg3
         if isinstance(entries, dict):
             if sparse is None: sparse = True
-    elif len(arg0.shape)==2:
-       import numpy
-       if isinstance(arg0,numpy.ndarray):
-           if str(arg0.dtype).count('float')==1:
-               if arg0.flags.c_contiguous==True:
-                   m=matrix(RDF,arg0.shape[0],arg0.shape[1],0)
-                   m._replace_self_with_numpy(arg0)
-                   return m
-           elif str(arg0.dtype).count('complex')==1:
-               if arg0.flags.c_contiguous==True:
-                   m=matrix(CDF,arg0.shape[0],arg0.shape[1],0)
-                   m._replace_self_with_numpy(arg0)
-                   return m                                                                                                                                
             
     else:
         import numpy
         if isinstance(arg0,numpy.ndarray):
             if str(arg0.dtype).count('float')==1:
-                if arg0.flags.c_contiguous==True:
+                if arg0.flags.c_contiguous==True or arg0.flags.f_contiguous==True:
                     m=matrix(RDF,arg0.shape[0],arg0.shape[1],0)
                     m._replace_self_with_numpy(arg0)
-                    return m
+                    if arg0.flags.c_contiguous:
+                        return m
+                    else:
+                        return m.transpose()
             elif str(arg0.dtype).count('complex')==1:
-                if arg0.flags.c_contiguous==True:
+                if arg0.flags.c_contiguous==True or arg0.flags.f_contiguous==True:
                     m=matrix(CDF,arg0.shape[0],arg0.shape[1],0)
                     m._replace_self_with_numpy(arg0)
-                    return m                                                                                                                                
-  
+                    if arg0.flags.c_contiguous:
+                        return m
+                    else:
+                        return m.transpose()
+                    
 
         else:
             raise TypeError, "unknown matrix constructor format.  Type matrix? for help"
