# HG changeset patch
# User jkantor@localhost.localdomain
# Date 1172404231 28800
# Node ID 45fddda4a48f6eb25c8157ef8cf18db133311532
# Parent  6dd0d407490833efc1dc58afe0d22ad2e1d716d4
fixed doctests

diff -r 6dd0d4074908 -r 45fddda4a48f sage/matrix/matrix_real_double_dense.pyx
--- a/sage/matrix/matrix_real_double_dense.pyx	Sat Feb 24 15:57:21 2007 -0800
+++ b/sage/matrix/matrix_real_double_dense.pyx	Sun Feb 25 03:50:31 2007 -0800
@@ -596,20 +596,22 @@ cdef class Matrix_real_double_dense(matr
 
 
     def cholesky(self):
-        """
+        r"""
         Computes the cholesky factorization of matrix. The matrix must be symmetric
         and positive definite or an
         exception will be raised.
-        sage:M=MatrixSpace(RDF,5)
-        sage:r=matrix(RDF,[[   0.,    0.,    0.,    0.,    1.],
-                           [   1.,    1.,    1.,    1.,    1.],
-                           [  16.,    8.,    4.,    2.,    1.],
-                           [  81.,   27.,    9.,    3.,    1.],
-                           [ 256.,   64.,   16.,    4.,    1.]])
+        sage: M=MatrixSpace(RDF,5)
+        sage: r=matrix(RDF,[[   0.,    0.,    0.,    0.,    1.],[   1.,    1.,    1.,    1.,    1.],[  16.,    8.,    4.,    2.,    1.],[  81.,   27.,    9.,    3.,    1.],[ 256.,   64.,   16.,    4.,    1.]])
                                     
-        sage:m=r*M(1)*r.transpose()
-        sage:c=m.cholesky()
-        sage:c*c.transpose()
+        sage: m=r*M(1)*r.transpose()
+        sage: c=m.cholesky()
+        sage: c*c.transpose()
+         [ 1.0     1.0     1.0     1.0     1.0]
+         [ 1.0     5.0    31.0   121.0   341.0]
+         [ 1.0    31.0   341.0  1555.0  4681.0]
+         [ 1.0   121.0  1555.0  7381.0 22621.0]
+         [ 1.0   341.0  4681.0 22621.0 69905.0]
+                         
         """
         cdef Matrix_real_double_dense _M,_result_matrix
         _M=self
@@ -661,7 +663,7 @@ cdef class Matrix_real_double_dense(matr
         sage: import numpy
         sage: m=matrix(RDF,[[1,2],[3,4]])
         sage: n=m.numpy()
-        sage: numpy.linalg.eig(n)
+        sage: e=numpy.linalg.eig(n)
  
         """
         import_array() #This must be called before using the numpy C/api or you will get segfault
